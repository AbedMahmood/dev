#!/bin/bash

# Detect shell and assign config file for PATH exports
if [ -n "$ZSH_VERSION" ]; then
    shell_config="$HOME/.zshrc"
else
    shell_config="$HOME/.bashrc"
fi

echo "=== Solana ==="
if command -v solana >/dev/null 2>&1; then
    echo "Solana CLI: OK"
else
    echo "Solana CLI: MISSING"
    read -p "Install Solana CLI? (y/n): " yn
    if [ "$yn" = "y" ]; then
        sh -c "$(curl -sSfL https://release.anza.xyz/stable/install)"
        echo 'export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"' >> "$shell_config"
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        echo "Solana CLI installed. Please restart your terminal or run 'source $shell_config'."
    fi
fi

echo "=== Rust and Cargo ==="
if command -v rustc >/dev/null 2>&1; then
    echo "Rust: OK"
else
    echo "Rust: MISSING"
    read -p "Install Rust (via rustup)? (y/n): " yn
    if [ "$yn" = "y" ]; then
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        echo 'source $HOME/.cargo/env' >> "$shell_config"
        source "$HOME/.cargo/env"
        echo "Rust installed."
    fi
fi

if command -v cargo >/dev/null 2>&1; then
    echo "Cargo: OK"
else
    echo "Cargo: MISSING"
    echo "Cargo should be installed with Rust. Please check your Rust installation."
fi

echo "=== Anchor ==="
if command -v anchor >/dev/null 2>&1; then
    echo "Anchor: OK"
else
    echo "Anchor: MISSING"
    read -p "Install Anchor (via AVM)? (y/n): " yn
    if [ "$yn" = "y" ]; then
        cargo install --git https://github.com/coral-xyz/anchor avm --force
        avm install latest
        avm use latest
        echo "Anchor installed via AVM."
    fi
fi

echo "=== Sui ==="
if command -v sui >/dev/null 2>&1; then
    echo "Sui CLI: OK"
else
    echo "Sui CLI: MISSING"
    read -p "Install Sui CLI? (y/n): " yn
    if [ "$yn" = "y" ]; then
        curl -sSfL https://github.com/MystenLabs/sui/releases/latest/download/sui-ubuntu-x86_64.tgz | tar xz
        sudo mv sui /usr/local/bin/
        echo "Sui CLI installed."
    fi
fi

echo "=== Ethereum ==="
if command -v node >/dev/null 2>&1; then
    echo "Node.js: OK"
else
    echo "Node.js: MISSING"
    read -p "Install Node.js (via NodeSource PPA)? (y/n): " yn
    if [ "$yn" = "y" ]; then
        curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
        sudo apt install -y nodejs
    fi
fi

# Fix for potential npm hanging
echo "Resetting npm cache and config before installs..."
npm cache clean --force
npm config delete proxy
npm config delete https-proxy
npm config set registry https://registry.npmjs.org/

if command -v npm >/dev/null 2>&1; then
    echo "npm: OK"
else
    echo "npm: MISSING"
    read -p "Install npm? (y/n): " yn
    if [ "$yn" = "y" ]; then
        sudo apt update
        sudo apt install -y npm
    fi
fi

echo "=== Hardhat ==="
if npx hardhat --version >/dev/null 2>&1; then
    echo "Hardhat: OK"
else
    echo "Hardhat: MISSING"
    read -p "Install Hardhat (globally with npm)? (y/n): " yn
    if [ "$yn" = "y" ]; then
        sudo npm install -g hardhat
    fi
fi

echo "=== Truffle ==="
if command -v truffle >/dev/null 2>&1; then
    echo "Truffle: OK"
else
    echo "Truffle: MISSING"
    read -p "Install Truffle (globally with npm)? (y/n): " yn
    if [ "$yn" = "y" ]; then
        sudo npm install -g truffle
    fi
fi

echo "=== Foundry (forge) ==="
if command -v forge >/dev/null 2>&1; then
    echo "Foundry (forge): OK"
else
    echo "Foundry (forge): MISSING"
    read -p "Install Foundry (via Foundryup)? (y/n): " yn
    if [ "$yn" = "y" ]; then
        curl -L https://foundry.paradigm.xyz | bash
        ~/.foundry/bin/foundryup
        echo "export PATH=\"$HOME/.foundry/bin:\$PATH\"" >> "$shell_config"
        export PATH="$HOME/.foundry/bin:$PATH"
        echo "Foundry installed. Please restart your terminal or run 'source $shell_config'."
    fi
fi
